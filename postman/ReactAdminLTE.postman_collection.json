{
  "info": {
    "name": "React AdminLTE API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Local API for Users, Roles, Categories, Products, Storage and Auth (JWT)."
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "health"
          ]
        }
      }
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leanne@example.com\",\n  \"password\": \"secret\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if response is successful",
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Parse response and store token",
                  "const json = pm.response.json();",
                  "if (json && json.token) {",
                  "    pm.environment.set('token', json.token);",
                  "    console.log('✅ JWT token stored successfully');",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(json.token).to.be.a('string');",
                  "    });",
                  "} else {",
                  "    console.log('❌ No token received in response');",
                  "}",
                  "",
                  "// Store user ID if available",
                  "if (json && json.user && json.user.id) {",
                  "    pm.environment.set('userId', json.user.id);",
                  "    console.log('✅ User ID stored:', json.user.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New User\",\n  \"email\": \"new.user@example.com\",\n  \"password\": \"secret\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if response is successful",
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "// Parse response and store token",
                  "const json = pm.response.json();",
                  "if (json && json.token) {",
                  "    pm.environment.set('token', json.token);",
                  "    console.log('✅ JWT token stored successfully');",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(json.token).to.be.a('string');",
                  "    });",
                  "} else {",
                  "    console.log('❌ No token received in response');",
                  "}",
                  "",
                  "// Store user ID if available",
                  "if (json && json.user && json.user.id) {",
                  "    pm.environment.set('userId', json.user.id);",
                  "    console.log('✅ User ID stored:', json.user.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Me",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "me"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            }
          }
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?search=admin",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "search",
                  "value": "admin",
                  "description": "Search term for user name or email"
                }
              ]
            }
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test.user@example.com\",\n  \"roles\": [2]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastUserId', json.id); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User By Id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{lastUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{lastUserId}}"
              ]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated User\",\n  \"roles\": [1, 2]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{lastUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{lastUserId}}"
              ]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{lastUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "{{lastUserId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Roles",
      "item": [
        {
          "name": "List Roles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/roles",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "roles"
              ]
            }
          }
        },
        {
          "name": "Create Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Manager\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/roles",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "roles"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastRoleId', json.id); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Supervisor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/roles/{{lastRoleId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "roles",
                "{{lastRoleId}}"
              ]
            }
          }
        },
        {
          "name": "Delete Role",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/roles/{{lastRoleId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "roles",
                "{{lastRoleId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            }
          }
        },
        {
          "name": "Search Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories?search=electronics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ],
              "query": [
                {
                  "key": "search",
                  "value": "electronics",
                  "description": "Search term for category name"
                }
              ]
            }
          }
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electronics\",\n  \"parentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastCategoryId', json.id); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Subcategory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Smartphones\",\n  \"parentId\": {{lastCategoryId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastSubcategoryId', json.id); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electronics & Gadgets\",\n  \"parentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{lastCategoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories",
                "{{lastCategoryId}}"
              ]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{lastSubcategoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories",
                "{{lastSubcategoryId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ]
            }
          }
        },
        {
          "name": "Get Product By Id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{lastProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{lastProductId}}"
              ]
            }
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"iPhone 15 Pro\",\n  \"description\": \"Latest iPhone with advanced features\",\n  \"price\": 999.99,\n  \"categoryId\": {{lastCategoryId}},\n  \"sku\": \"IPH15PRO-256\",\n  \"stock\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastProductId', json.id); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"iPhone 15 Pro Max\",\n  \"description\": \"Latest iPhone with advanced features and larger screen\",\n  \"price\": 1099.99,\n  \"stock\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{lastProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{lastProductId}}"
              ]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{lastProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{lastProductId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Storage",
      "item": [
        {
          "name": "List Root Directory",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/storage",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage"
              ]
            }
          }
        },
        {
          "name": "Create Directory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Project Assets\",\n  \"parentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/directories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "directories"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastDirectoryId', json.id); }"
                ]
              }
            }
          ]
        },
        {
          "name": "List Directory Contents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/storage?directoryId={{lastDirectoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage"
              ],
              "query": [
                {
                  "key": "directoryId",
                  "value": "{{lastDirectoryId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Update Directory",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Project Assets (Renamed)\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/directories/{{lastDirectoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "directories",
                "{{lastDirectoryId}}"
              ]
            }
          }
        },
        {
          "name": "Set Directory Grants",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grants\": [\n    { \"roleId\": 2, \"access\": \"read\" }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/directories/{{lastDirectoryId}}/grants",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "directories",
                "{{lastDirectoryId}}",
                "grants"
              ]
            }
          }
        },
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "directoryId",
                  "value": "{{lastDirectoryId}}",
                  "type": "text"
                },
                {
                  "key": "displayName",
                  "value": "design-spec.pdf",
                  "type": "text"
                },
                {
                  "key": "visibility",
                  "value": "private",
                  "type": "text"
                },
                {
                  "key": "file",
                  "type": "file",
                  "src": "path/to/local/file.pdf"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/files",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "files"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('lastFileId', json.id); }"
                ]
              }
            }
          ]
        },
        {
          "name": "Update File",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"displayName\": \"design-spec-v2.pdf\",\n  \"visibility\": \"public\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/files/{{lastFileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "files",
                "{{lastFileId}}"
              ]
            }
          }
        },
        {
          "name": "Set File Grants",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grants\": [\n    { \"roleId\": 2, \"access\": \"read\" },\n    { \"roleId\": 3, \"access\": \"write\" }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/storage/files/{{lastFileId}}/grants",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "files",
                "{{lastFileId}}",
                "grants"
              ]
            }
          }
        },
        {
          "name": "Delete File",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/storage/files/{{lastFileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "files",
                "{{lastFileId}}"
              ]
            }
          }
        },
        {
          "name": "Delete Directory",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/storage/directories/{{lastDirectoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "storage",
                "directories",
                "{{lastDirectoryId}}"
              ]
            }
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Check if token exists for authenticated requests",
          "const token = pm.environment.get('token');",
          "const requestUrl = pm.request.url.toString();",
          "",
          "// Skip token check for auth endpoints",
          "if (requestUrl.includes('/auth/') || requestUrl.includes('/health')) {",
          "    return;",
          "}",
          "",
          "// Check token for other endpoints",
          "if (!token || token === '') {",
          "    console.log('⚠️  No JWT token found. Please login first using the Auth > Login request.');",
          "    console.log('   The token will be automatically stored after successful login.');",
          "} else {",
          "    console.log('✅ JWT token found and will be sent with this request');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001"
    },
    {
      "key": "token",
      "value": ""
    },
    {
      "key": "lastUserId",
      "value": ""
    },
    {
      "key": "lastRoleId",
      "value": ""
    },
    {
      "key": "lastCategoryId",
      "value": ""
    },
    {
      "key": "lastSubcategoryId",
      "value": ""
    },
    {
      "key": "lastProductId",
      "value": ""
    },
    {
      "key": "lastDirectoryId",
      "value": ""
    },
    {
      "key": "lastFileId",
      "value": ""
    }
  ]
}